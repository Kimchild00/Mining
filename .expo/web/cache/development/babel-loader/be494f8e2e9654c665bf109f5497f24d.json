{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { Text, Box, Center, Image, FormControl, Input, AspectRatio, Stack, Heading, HStack, Button, Modal } from 'native-base';\nimport { db } from \"../Config/Firebase\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AppFeedCart() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      comment = _useState4[0],\n      setComment = _useState4[1];\n\n  var handleComment = function handleComment() {\n    var docRef;\n    return _regeneratorRuntime.async(function handleComment$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('update database ke', props.id, comment);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(addDoc(collection(db, \"comment\"), {\n              comment: comment,\n              id: props.id\n            }));\n\n          case 4:\n            docRef = _context.sent;\n            console.log(\"Document written with ID: \", docRef.id);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(\"Error adding document: \", _context.t0);\n\n          case 11:\n            setShowModal(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  return _jsx(Box, {\n    alignItems: \"center\",\n    p: 1,\n    children: _jsxs(Box, {\n      maxW: \"80\",\n      rounded: \"lg\",\n      overflow: \"hidden\",\n      borderColor: \"coolGray.200\",\n      borderWidth: \"1\",\n      _dark: {\n        borderColor: \"coolGray.600\",\n        backgroundColor: \"gray.700\"\n      },\n      _web: {\n        shadow: 2,\n        borderWidth: 0\n      },\n      _light: {\n        backgroundColor: \"gray.50\"\n      },\n      children: [_jsxs(Box, {\n        children: [_jsx(AspectRatio, {\n          w: \"100%\",\n          ratio: 16 / 9,\n          children: _jsx(Image, {\n            source: {\n              uri: \"https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg\"\n            },\n            alt: \"image\"\n          })\n        }), _jsx(Center, {\n          bg: \"violet.500\",\n          _dark: {\n            bg: \"violet.400\"\n          },\n          _text: {\n            color: \"warmGray.50\",\n            fontWeight: \"700\",\n            fontSize: \"xs\"\n          },\n          position: \"absolute\",\n          bottom: \"0\",\n          px: \"3\",\n          py: \"1.5\",\n          children: \"PHOTOS\"\n        })]\n      }), _jsxs(Stack, {\n        p: \"4\",\n        space: 3,\n        children: [_jsxs(Stack, {\n          space: 2,\n          children: [_jsxs(Heading, {\n            size: \"md\",\n            ml: \"-1\",\n            children: [\"The Garden City \", props.id]\n          }), _jsx(Text, {\n            fontSize: \"xs\",\n            _light: {\n              color: \"violet.500\"\n            },\n            _dark: {\n              color: \"violet.400\"\n            },\n            fontWeight: \"500\",\n            ml: \"-0.5\",\n            mt: \"-1\",\n            children: \"The Silicon Valley of India.\"\n          })]\n        }), _jsx(Text, {\n          fontWeight: \"400\",\n          children: \"Bengaluru (also called Bangalore) is the center of India's high-tech industry. The city is also known for its parks and nightlife.\"\n        }), _jsx(HStack, {\n          alignItems: \"center\",\n          space: 4,\n          justifyContent: \"space-between\",\n          children: _jsxs(HStack, {\n            alignItems: \"center\",\n            children: [_jsx(Text, {\n              color: \"coolGray.600\",\n              _dark: {\n                color: \"warmGray.200\"\n              },\n              fontWeight: \"400\",\n              children: \"6 mins ago\"\n            }), _jsx(Button, {\n              onPress: function onPress() {\n                return setShowModal(true);\n              },\n              children: \"Lihat\"\n            }), _jsx(Modal, {\n              isOpen: showModal,\n              onClose: function onClose() {\n                return setShowModal(false);\n              },\n              children: _jsxs(Modal.Content, {\n                maxWidth: \"400px\",\n                children: [_jsx(Modal.CloseButton, {}), _jsx(Modal.Header, {\n                  children: \"Comment\"\n                }), _jsx(Modal.Body, {\n                  children: _jsx(FormControl, {\n                    children: _jsx(Input, {\n                      onChangeText: function onChangeText(text) {\n                        return setComment(text);\n                      }\n                    })\n                  })\n                }), _jsx(Modal.Footer, {\n                  children: _jsxs(Button.Group, {\n                    space: 2,\n                    children: [_jsx(Button, {\n                      variant: \"ghost\",\n                      colorScheme: \"blueGray\",\n                      onPress: function onPress() {\n                        setShowModal(false);\n                      },\n                      children: \"Cancel\"\n                    }), _jsx(Button, {\n                      onPress: function onPress() {\n                        handleComment();\n                      },\n                      children: \"Save\"\n                    })]\n                  })\n                })]\n              })\n            })]\n          })\n        })]\n      })]\n    })\n  });\n}\n\nexport default AppFeedCart;","map":{"version":3,"sources":["C:/laragon/www/mining/src/Components/AppFeedCart.js"],"names":["React","useState","Text","Box","Center","Image","FormControl","Input","AspectRatio","Stack","Heading","HStack","Button","Modal","db","addDoc","collection","AppFeedCart","showModal","setShowModal","comment","setComment","handleComment","console","log","props","id","docRef","error","borderColor","backgroundColor","shadow","borderWidth","uri","bg","color","fontWeight","fontSize","text"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport { Text,Box, Center,Image, FormControl,Input,AspectRatio, Stack,Heading,HStack ,Button,Modal} from 'native-base'\r\nimport { db } from '../Config/Firebase'\r\nimport { addDoc, collection } from \"firebase/firestore\"; \r\n\r\nfunction AppFeedCart() {\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\nconst [comment,setComment] = useState('');\r\nconst handleComment=async ()=>{\r\n    console.log('update database ke',props.id,comment);\r\n    try {\r\n        const docRef = await addDoc(collection(db, \"comment\"), {\r\n          comment: comment,\r\n          id:props.id\r\n        });\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n      } catch (error) {\r\n        console.error(\"Error adding document: \", error);\r\n      }\r\n    setShowModal(false);\r\n}\r\n  return (\r\n    <Box alignItems=\"center\" p={1} >\r\n    <Box maxW=\"80\" rounded=\"lg\" overflow=\"hidden\" borderColor=\"coolGray.200\" borderWidth=\"1\" \r\n    _dark={{borderColor: \"coolGray.600\",backgroundColor: \"gray.700\"}} \r\n    _web={{shadow: 2,borderWidth: 0}} \r\n    _light={{backgroundColor: \"gray.50\"}}>\r\n    <Box>\r\n      <AspectRatio w=\"100%\" ratio={16 / 9}>\r\n        <Image source={{ \r\n            uri: \"https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg\"\r\n            }} alt=\"image\" />\r\n      </AspectRatio>\r\n      <Center bg=\"violet.500\" _dark={{\r\n      bg: \"violet.400\"\r\n    }} _text={{\r\n      color: \"warmGray.50\",\r\n      fontWeight: \"700\",\r\n      fontSize: \"xs\"\r\n    }} position=\"absolute\" bottom=\"0\" px=\"3\" py=\"1.5\">\r\n        PHOTOS\r\n      </Center>\r\n    </Box>\r\n    <Stack p=\"4\" space={3}>\r\n      <Stack space={2}>\r\n        <Heading size=\"md\" ml=\"-1\">\r\n          The Garden City {props.id}\r\n        </Heading>\r\n        <Text fontSize=\"xs\" _light={{\r\n        color: \"violet.500\"\r\n      }} _dark={{\r\n        color: \"violet.400\"\r\n      }} fontWeight=\"500\" ml=\"-0.5\" mt=\"-1\">\r\n          The Silicon Valley of India.\r\n        </Text>\r\n      </Stack>\r\n      <Text fontWeight=\"400\">\r\n        Bengaluru (also called Bangalore) is the center of India's high-tech\r\n        industry. The city is also known for its parks and nightlife.\r\n      </Text>\r\n      <HStack alignItems=\"center\" space={4} justifyContent=\"space-between\">\r\n        <HStack alignItems=\"center\">\r\n          <Text color=\"coolGray.600\" _dark={{color: \"warmGray.200\"}} fontWeight=\"400\">\r\n            6 mins ago\r\n          </Text>\r\n          <Button onPress={()=>setShowModal(true)}>Lihat</Button>\r\n          <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\r\n            <Modal.Content maxWidth=\"400px\">\r\n            <Modal.CloseButton />\r\n            <Modal.Header>Comment</Modal.Header>\r\n            <Modal.Body>\r\n                <FormControl>\r\n                    <Input onChangeText={(text)=>setComment(text)}/>\r\n                </FormControl>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button.Group space={2}>\r\n                <Button variant=\"ghost\" colorScheme=\"blueGray\" onPress={() => {setShowModal(false)}}>\r\n                    Cancel\r\n                </Button>\r\n                <Button onPress={() => {handleComment()}}>\r\n                    Save\r\n                </Button>\r\n                </Button.Group>\r\n            </Modal.Footer>\r\n            </Modal.Content>\r\n        </Modal>\r\n        </HStack>\r\n      </HStack>\r\n    </Stack>\r\n  </Box>\r\n</Box>\r\n  )\r\n}\r\n\r\nexport default AppFeedCart"]},"metadata":{},"sourceType":"module"}