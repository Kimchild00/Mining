{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport { Text, Box, FlatList, Input, Spinner } from 'native-base';\nimport AppFeedCart from \"../Components/AppFeedCart\";\nimport { ApiFeed } from \"../../Api/ApiFeed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ScholarFeedScreen() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      feed = _useState2[0],\n      setFeed = _useState2[1];\n\n  var getApi = function getApi() {\n    var result;\n    return _regeneratorRuntime.async(function getApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ApiFeed.get('/posts'));\n\n          case 3:\n            result = _context.sent;\n            setFeed(result.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getApi();\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(Box, {\n      safeArea: true,\n      bg: \"#ffd600\",\n      width: \"100%\",\n      height: \"50\",\n      alignItems: \"center\",\n      children: [_jsx(Input, {\n        mx: \"3\",\n        placeholder: \"Cari\",\n        w: \"300\",\n        height: \"25\",\n        maxWidth: \"300px\",\n        bg: \"white\"\n      }), _jsx(Text, {\n        children: \"Logo\"\n      })]\n    }), _jsx(Box, {\n      alignItems: \"center\",\n      flex: 1,\n      children: feed ? _jsx(FlatList, {\n        data: feed,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(AppFeedCard, {\n            id: item.id\n          });\n        }\n      }) : _jsx(Spinner, {})\n    })]\n  });\n}\n\nexport default ScholarFeedScreen;","map":{"version":3,"sources":["C:/laragon/www/mining/src/Screens/ScholarFeedScreen.js"],"names":["React","useEffect","useState","Text","Box","FlatList","Input","Spinner","AppFeedCart","ApiFeed","ScholarFeedScreen","feed","setFeed","getApi","get","result","data","console","log","item","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAcC,GAAd,EAAkBC,QAAlB,EAA2BC,KAA3B,EAAkCC,OAAlC,QAAiD,aAAjD;AAEA,OAAOC,WAAP;AACA,SAASC,OAAT;;;;;AAEA,SAASC,iBAAT,GAA6B;AACzB,kBAAqBR,QAAQ,EAA7B;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAYC,OAAZ;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEeJ,OAAO,CAACK,GAAR,CAAY,QAAZ,CAFf;;AAAA;AAEDC,YAAAA,MAFC;AAGPH,YAAAA,OAAO,CAACG,MAAM,CAACC,IAAR,CAAP;AAHO;AAAA;;AAAA;AAAA;AAAA;AAKPC,YAAAA,OAAO,CAACC,GAAR;;AALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAQFjB,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAQ;AAAA,eACR,MAAC,GAAD;AAAK,MAAA,QAAQ,MAAb;AAAc,MAAA,EAAE,EAAC,SAAjB;AAA2B,MAAA,KAAK,EAAC,MAAjC;AAAwC,MAAA,MAAM,EAAC,IAA/C;AAAoD,MAAA,UAAU,EAAC,QAA/D;AAAA,iBACI,KAAC,KAAD;AAAO,QAAA,EAAE,EAAC,GAAV;AAAc,QAAA,WAAW,EAAC,MAA1B;AAAiC,QAAA,CAAC,EAAC,KAAnC;AAAyC,QAAA,MAAM,EAAC,IAAhD;AAAqD,QAAA,QAAQ,EAAC,OAA9D;AAAsE,QAAA,EAAE,EAAC;AAAzE,QADJ,EAEI,KAAC,IAAD;AAAA;AAAA,QAFJ;AAAA,MADQ,EAKR,KAAC,GAAD;AAAK,MAAA,UAAU,EAAC,QAAhB;AAAyB,MAAA,IAAI,EAAE,CAA/B;AAAA,gBACCF,IAAI,GACD,KAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAsB,QAAA,UAAU,EAAE;AAAA,cAAEQ,IAAF,QAAEA,IAAF;AAAA,iBAAY,KAAC,WAAD;AAAa,YAAA,EAAE,EAAEA,IAAI,CAACC;AAAtB,YAAZ;AAAA;AAAlC,QADC,GAGD,KAAC,OAAD;AAJJ,MALQ;AAAA,IAAR;AAaD;;AAED,eAAeV,iBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Text,Box,FlatList,Input, Spinner } from 'native-base'\r\n\r\nimport AppFeedCart from '../Components/AppFeedCart';\r\nimport { ApiFeed } from '../../Api/ApiFeed'\r\n\r\nfunction ScholarFeedScreen() {\r\n    const [feed,setFeed]=useState();\r\n    const getApi = async () =>{\r\n        try {\r\n            const result =  await ApiFeed.get('/posts');\r\n            setFeed(result.data);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n  }\r\n  useEffect(() => {\r\n    getApi();\r\n  }, [])\r\n\r\n  return (<>\r\n  <Box safeArea bg='#ffd600' width='100%' height='50' alignItems='center'>\r\n      <Input mx=\"3\" placeholder=\"Cari\" w='300' height='25' maxWidth=\"300px\" bg='white' />\r\n      <Text>Logo</Text>\r\n  </Box>\r\n  <Box alignItems='center' flex={1}>  \r\n  {feed?\r\n      <FlatList data={feed} renderItem={({item}) => <AppFeedCard id={item.id}/>}/>    \r\n      :\r\n      <Spinner/>\r\n  }\r\n  </Box>\r\n</>)\r\n}\r\n\r\nexport default ScholarFeedScreen"]},"metadata":{},"sourceType":"module"}