{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useState } from \"react-native-web/dist/index\";\nimport { NativeBaseProvider, Box, Text, Center, TabView, SceneMap } from \"native-base\";\nimport Constants from \"expo-constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FirstRoute = function FirstRoute() {\n  return _jsx(Center, {\n    flex: 1,\n    my: \"4\",\n    children: \"This is Tab 1\"\n  });\n};\n\nvar SecondRoute = function SecondRoute() {\n  return _jsx(Center, {\n    flex: 1,\n    my: \"4\",\n    children: \"This is Tab 2\"\n  });\n};\n\nvar ThirdRoute = function ThirdRoute() {\n  return _jsx(Center, {\n    flex: 1,\n    my: \"4\",\n    children: \"This is Tab 3\"\n  });\n};\n\nvar FourthRoute = function FourthRoute() {\n  return _jsxs(Center, {\n    flex: 1,\n    my: \"4\",\n    children: [\"This is Tab 4\", \" \"]\n  });\n};\n\nvar initialLayout = {\n  width: Dimensions.get(\"window\").width\n};\nvar renderScene = SceneMap({\n  first: FirstRoute,\n  second: SecondRoute,\n  third: ThirdRoute,\n  fourth: FourthRoute\n});\n\nfunction Example() {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState([{\n    key: \"first\",\n    title: \"Tab 1\"\n  }, {\n    key: \"second\",\n    title: \"Tab 2\"\n  }, {\n    key: \"third\",\n    title: \"Tab 3\"\n  }, {\n    key: \"fourth\",\n    title: \"Tab 4\"\n  }]),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      routes = _React$useState4[0];\n\n  var renderTabBar = function renderTabBar(props) {\n    var inputRange = props.navigationState.routes.map(function (x, i) {\n      return i;\n    });\n    return _jsx(Box, {\n      flexDirection: \"row\",\n      children: props.navigationState.routes.map(function (route, i) {\n        var opacity = props.position.interpolate({\n          inputRange: inputRange,\n          outputRange: inputRange.map(function (inputIndex) {\n            return inputIndex === i ? 1 : 0.5;\n          })\n        });\n        var color = index === i ? useColorModeValue(\"#000\", \"#e5e5e5\") : useColorModeValue(\"#1f2937\", \"#a1a1aa\");\n        var borderColor = index === i ? \"cyan.500\" : useColorModeValue(\"coolGray.200\", \"gray.400\");\n        return _jsx(Box, {\n          borderBottomWidth: \"3\",\n          borderColor: borderColor,\n          flex: 1,\n          alignItems: \"center\",\n          p: \"3\",\n          cursor: \"pointer\",\n          children: _jsx(Pressable, {\n            onPress: function onPress() {\n              console.log(i);\n              setIndex(i);\n            },\n            children: _jsx(Animated.Text, {\n              style: {\n                color: color\n              },\n              children: route.title\n            })\n          })\n        });\n      })\n    });\n  };\n\n  return _jsx(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    renderTabBar: renderTabBar,\n    onIndexChange: setIndex,\n    initialLayout: initialLayout,\n    style: {\n      marginTop: StatusBar.currentHeight\n    }\n  });\n}\n\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 1,\n      px: \"3\",\n      children: _jsx(Example, {})\n    })\n  });\n});","map":{"version":3,"sources":["C:/laragon/www/mining/src/Components/AppTabView.js"],"names":["React","useState","NativeBaseProvider","Box","Text","Center","TabView","SceneMap","Constants","FirstRoute","SecondRoute","ThirdRoute","FourthRoute","initialLayout","width","Dimensions","get","renderScene","first","second","third","fourth","Example","index","setIndex","key","title","routes","renderTabBar","props","inputRange","navigationState","map","x","i","route","opacity","position","interpolate","outputRange","inputIndex","color","useColorModeValue","borderColor","console","log","marginTop","StatusBar","currentHeight"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;SACyFC,Q;AAEzF,SAASC,kBAAT,EAA6BC,GAA7B,EAAkCC,IAAlC,EAAwCC,MAAxC,EAAgDC,OAAhD,EAAyDC,QAAzD,QAA0E,aAA1E;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,KAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAC,GAApB;AAAA;AAAA,IAAN;AAAA,CAAnB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,KAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAC,GAApB;AAAA;AAAA,IAAN;AAAA,CAApB;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,KAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAC,GAApB;AAAA;AAAA,IAAN;AAAA,CAAnB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,EAAE,EAAC,GAApB;AAAA,gCACR,GADQ;AAAA,IAAN;AAAA,CAApB;;AAIA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF;AADZ,CAAtB;AAGA,IAAMG,WAAW,GAAGV,QAAQ,CAAC;AAC3BW,EAAAA,KAAK,EAAET,UADoB;AAE3BU,EAAAA,MAAM,EAAET,WAFmB;AAG3BU,EAAAA,KAAK,EAAET,UAHoB;AAI3BU,EAAAA,MAAM,EAAET;AAJmB,CAAD,CAA5B;;AAOA,SAASU,OAAT,GAAmB;AACjB,wBAA0BtB,KAAK,CAACC,QAAN,CAAe,CAAf,CAA1B;AAAA;AAAA,MAAOsB,KAAP;AAAA,MAAcC,QAAd;;AACA,yBAAiBxB,KAAK,CAACC,QAAN,CAAe,CAAC;AAC/BwB,IAAAA,GAAG,EAAE,OAD0B;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,EAG7B;AACDD,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE;AAFN,GAH6B,EAM7B;AACDD,IAAAA,GAAG,EAAE,OADJ;AAEDC,IAAAA,KAAK,EAAE;AAFN,GAN6B,EAS7B;AACDD,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE;AAFN,GAT6B,CAAf,CAAjB;AAAA;AAAA,MAAOC,MAAP;;AAcA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC5B,QAAMC,UAAU,GAAGD,KAAK,CAACE,eAAN,CAAsBJ,MAAtB,CAA6BK,GAA7B,CAAiC,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAV;AAAA,KAAjC,CAAnB;AACA,WAAO,KAAC,GAAD;AAAK,MAAA,aAAa,EAAC,KAAnB;AAAA,gBACFL,KAAK,CAACE,eAAN,CAAsBJ,MAAtB,CAA6BK,GAA7B,CAAiC,UAACG,KAAD,EAAQD,CAAR,EAAc;AAChD,YAAME,OAAO,GAAGP,KAAK,CAACQ,QAAN,CAAeC,WAAf,CAA2B;AACzCR,UAAAA,UAAU,EAAVA,UADyC;AAEzCS,UAAAA,WAAW,EAAET,UAAU,CAACE,GAAX,CAAe,UAAAQ,UAAU;AAAA,mBAAIA,UAAU,KAAKN,CAAf,GAAmB,CAAnB,GAAuB,GAA3B;AAAA,WAAzB;AAF4B,SAA3B,CAAhB;AAIA,YAAMO,KAAK,GAAGlB,KAAK,KAAKW,CAAV,GAAcQ,iBAAiB,CAAC,MAAD,EAAS,SAAT,CAA/B,GAAqDA,iBAAiB,CAAC,SAAD,EAAY,SAAZ,CAApF;AACA,YAAMC,WAAW,GAAGpB,KAAK,KAAKW,CAAV,GAAc,UAAd,GAA2BQ,iBAAiB,CAAC,cAAD,EAAiB,UAAjB,CAAhE;AACA,eAAO,KAAC,GAAD;AAAK,UAAA,iBAAiB,EAAC,GAAvB;AAA2B,UAAA,WAAW,EAAEC,WAAxC;AAAqD,UAAA,IAAI,EAAE,CAA3D;AAA8D,UAAA,UAAU,EAAC,QAAzE;AAAkF,UAAA,CAAC,EAAC,GAApF;AAAwF,UAAA,MAAM,EAAC,SAA/F;AAAA,oBACD,KAAC,SAAD;AAAW,YAAA,OAAO,EAAE,mBAAM;AAC5BC,cAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;AACAV,cAAAA,QAAQ,CAACU,CAAD,CAAR;AACD,aAHG;AAAA,sBAIE,KAAC,QAAD,CAAU,IAAV;AAAe,cAAA,KAAK,EAAE;AACxBO,gBAAAA,KAAK,EAALA;AADwB,eAAtB;AAAA,wBAEAN,KAAK,CAACT;AAFN;AAJF;AADC,UAAP;AAUD,OAjBE;AADE,MAAP;AAoBD,GAtBD;;AAwBA,SAAO,KAAC,OAAD;AAAS,IAAA,eAAe,EAAE;AAC/BH,MAAAA,KAAK,EAALA,KAD+B;AAE/BI,MAAAA,MAAM,EAANA;AAF+B,KAA1B;AAGJ,IAAA,WAAW,EAAEV,WAHT;AAGsB,IAAA,YAAY,EAAEW,YAHpC;AAGkD,IAAA,aAAa,EAAEJ,QAHjE;AAG2E,IAAA,aAAa,EAAEX,aAH1F;AAGyG,IAAA,KAAK,EAAE;AACrHiC,MAAAA,SAAS,EAAEC,SAAS,CAACC;AADgG;AAHhH,IAAP;AAMD;;AAEG,gBAAe,YAAM;AACjB,SACE,KAAC,kBAAD;AAAA,cACE,KAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,CAAd;AAAiB,MAAA,EAAE,EAAC,GAApB;AAAA,gBACI,KAAC,OAAD;AADJ;AADF,IADF;AAOH,CARD","sourcesContent":["import * as React from \"react\";\r\nimport { View, StyleSheet, Dimensions, StatusBar, TouchableOpacity, Animated, Pressable, useState } from \"react-native\";\r\n// import { TabView, SceneMap } from \"react-native-tab-view\";\r\nimport { NativeBaseProvider, Box, Text, Center, TabView, SceneMap  } from \"native-base\";\r\nimport Constants from \"expo-constants\";\r\n\r\nconst FirstRoute = () => <Center flex={1} my=\"4\">\r\n    This is Tab 1\r\n  </Center>;\r\n\r\nconst SecondRoute = () => <Center flex={1} my=\"4\">\r\n    This is Tab 2\r\n  </Center>;\r\n\r\nconst ThirdRoute = () => <Center flex={1} my=\"4\">\r\n    This is Tab 3\r\n  </Center>;\r\n\r\nconst FourthRoute = () => <Center flex={1} my=\"4\">\r\n    This is Tab 4{\" \"}\r\n  </Center>;\r\n\r\nconst initialLayout = {\r\n  width: Dimensions.get(\"window\").width\r\n};\r\nconst renderScene = SceneMap({\r\n  first: FirstRoute,\r\n  second: SecondRoute,\r\n  third: ThirdRoute,\r\n  fourth: FourthRoute\r\n});\r\n\r\nfunction Example() {\r\n  const [index, setIndex] = React.useState(0);\r\n  const [routes] = React.useState([{\r\n    key: \"first\",\r\n    title: \"Tab 1\"\r\n  }, {\r\n    key: \"second\",\r\n    title: \"Tab 2\"\r\n  }, {\r\n    key: \"third\",\r\n    title: \"Tab 3\"\r\n  }, {\r\n    key: \"fourth\",\r\n    title: \"Tab 4\"\r\n  }]);\r\n\r\n  const renderTabBar = props => {\r\n    const inputRange = props.navigationState.routes.map((x, i) => i);\r\n    return <Box flexDirection=\"row\">\r\n        {props.navigationState.routes.map((route, i) => {\r\n        const opacity = props.position.interpolate({\r\n          inputRange,\r\n          outputRange: inputRange.map(inputIndex => inputIndex === i ? 1 : 0.5)\r\n        });\r\n        const color = index === i ? useColorModeValue(\"#000\", \"#e5e5e5\") : useColorModeValue(\"#1f2937\", \"#a1a1aa\");\r\n        const borderColor = index === i ? \"cyan.500\" : useColorModeValue(\"coolGray.200\", \"gray.400\");\r\n        return <Box borderBottomWidth=\"3\" borderColor={borderColor} flex={1} alignItems=\"center\" p=\"3\" cursor=\"pointer\">\r\n              <Pressable onPress={() => {\r\n            console.log(i);\r\n            setIndex(i);\r\n          }}>\r\n                <Animated.Text style={{\r\n              color\r\n            }}>{route.title}</Animated.Text>\r\n              </Pressable>\r\n            </Box>;\r\n      })}\r\n      </Box>;\r\n  };\r\n\r\n  return <TabView navigationState={{\r\n    index,\r\n    routes\r\n  }} renderScene={renderScene} renderTabBar={renderTabBar} onIndexChange={setIndex} initialLayout={initialLayout} style={{\r\n    marginTop: StatusBar.currentHeight\r\n  }} />;\r\n}\r\n\r\n    export default () => {\r\n        return (\r\n          <NativeBaseProvider>\r\n            <Center flex={1} px=\"3\">\r\n                <Example />\r\n            </Center>\r\n          </NativeBaseProvider>\r\n        );\r\n    };\r\n    "]},"metadata":{},"sourceType":"module"}