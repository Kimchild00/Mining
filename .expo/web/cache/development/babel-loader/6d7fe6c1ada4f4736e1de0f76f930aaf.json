{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Box, Button, Center, FormControl, Heading, Input, VStack } from 'native-base';\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { app } from \"../Config/Firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth(app);\n\nfunction RegisterScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmationPassword = _useState6[0],\n      setConfirmationPassword = _useState6[1];\n\n  var handleSignUp = function handleSignUp() {\n    var result;\n    return _regeneratorRuntime.async(function handleSignUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(auth, email, password));\n\n          case 3:\n            result = _context.sent;\n            if (result) console.log('SUCCESSp[');\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return _jsx(Center, {\n    w: \"100%\",\n    children: _jsxs(Box, {\n      children: [_jsx(Heading, {\n        children: \"Register\"\n      }), _jsx(Input, {\n        width: 200,\n        placeholder: \"email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Input, {\n        width: 200,\n        placeholder: \"password\",\n        type: \"password\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(Button, {\n        m: \"2\",\n        maxW: 200,\n        onPress: function onPress() {\n          return handleSignUp();\n        },\n        children: \"Daftar\"\n      })]\n    })\n  });\n}\n\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/laragon/www/mining/src/Screens/SignUpScreen.js"],"names":["Box","Button","Center","FormControl","Heading","Input","VStack","React","useState","createUserWithEmailAndPassword","app","auth","getAuth","RegisterScreen","email","setEmail","password","setPassword","confirmationPassword","setConfirmationPassword","handleSignUp","result","console","log","text"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,WAA9B,EAA2CC,OAA3C,EAAoDC,KAApD,EAA2DC,MAA3D,QAAyE,aAAzE;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,8BAAT,QAA+C,eAA/C;AAEA,SAAQC,GAAR;;;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACF,GAAD,CAApB;;AAEA,SAASG,cAAT,GAA0B;AACxB,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCP,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwDT,QAAQ,CAAC,EAAD,CAAhE;AAAA;AAAA,MAAOU,oBAAP;AAAA,MAA6BC,uBAA7B;;AAYA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEMX,8BAA8B,CAACE,IAAD,EAAOG,KAAP,EAAcE,QAAd,CAFpC;;AAAA;AAETK,YAAAA,MAFS;AAGf,gBAAGA,MAAH,EAAWC,OAAO,CAACC,GAAR,CAAY,WAAZ;AAHI;AAAA;;AAAA;AAAA;AAAA;AAMfD,YAAAA,OAAO,CAACC,GAAR;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AASA,SACE,KAAC,MAAD;AAAQ,IAAA,CAAC,EAAC,MAAV;AAAA,cACE,MAAC,GAAD;AAAA,iBACE,KAAC,OAAD;AAAA;AAAA,QADF,EAEE,KAAC,KAAD;AAAO,QAAA,KAAK,EAAE,GAAd;AAAmB,QAAA,WAAW,EAAC,OAA/B;AAAuC,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,iBAAQT,QAAQ,CAACS,IAAD,CAAhB;AAAA;AAArD,QAFF,EAGN,KAAC,KAAD;AAAO,QAAA,KAAK,EAAE,GAAd;AAAmB,QAAA,WAAW,EAAC,UAA/B;AAA0C,QAAA,IAAI,EAAC,UAA/C;AAA0D,QAAA,YAAY,EAAE,sBAACA,IAAD;AAAA,iBAAQP,WAAW,CAACO,IAAD,CAAnB;AAAA;AAAxE,QAHM,EAIN,KAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,GAAV;AAAc,QAAA,IAAI,EAAE,GAApB;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAIJ,YAAY,EAAhB;AAAA,SAAlC;AAAA;AAAA,QAJM;AAAA;AADF,IADF;AAuCD;;AAED,eAAeP,cAAf","sourcesContent":["import { Box, Button, Center, FormControl, Heading, Input, VStack } from 'native-base'\r\nimport React, { useState } from 'react'\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth'\r\n// import { auth } from \"../Config/Firebase\";\r\nimport {app} from '../Config/Firebase'\r\n\r\nconst auth = getAuth(app);\r\n\r\nfunction RegisterScreen() {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmationPassword, setConfirmationPassword] = useState(\"\")\r\n\r\n  // const onHandleRegister = () => {\r\n  //   if (password != confirmationPassword) {\r\n  //     console.log('Password and confirmation is not match')\r\n  //     return ''\r\n  //   }\r\n  //   createUserWithEmailAndPassword(auth, email, password)\r\n  //     .then(() => console.log(\"Register success\"))\r\n  //     .catch((error) => alert(error.message));\r\n  // }\r\n\r\n  const handleSignUp = async ()=>{\r\n    try{\r\n        const result = await createUserWithEmailAndPassword(auth, email, password);\r\n        if(result) console.log('SUCCESSp[');\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n  return (\r\n    <Center w=\"100%\">\r\n      <Box>\r\n        <Heading>Register</Heading>\r\n        <Input width={200} placeholder='email' onChangeText={(text)=>setEmail(text)}/>\r\n<Input width={200} placeholder='password' type='password' onChangeText={(text)=>setPassword(text)} />\r\n<Button m='2' maxW={200} onPress={()=>handleSignUp()}>Daftar</Button>\r\n      </Box>\r\n      {/* <Box safeArea p=\"2\" py=\"8\" w=\"100%\" maxW=\"700\">\r\n        <Heading size=\"lg\" color=\"coolGray.800\" _dark={{\r\n        color: \"warmGray.50\"\r\n      }} fontWeight=\"semibold\">\r\n          Welcome\r\n        </Heading>\r\n        <Heading mt=\"1\" color=\"coolGray.600\" _dark={{\r\n        color: \"warmGray.200\"\r\n      }} fontWeight=\"medium\" size=\"xs\">\r\n          Sign up to continue!\r\n        </Heading>\r\n        <VStack space={3} mt=\"5\">\r\n          <FormControl>\r\n            <FormControl.Label>Email</FormControl.Label>\r\n            <Input onChangeText={(text) => setEmail(text)} />\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormControl.Label>Password</FormControl.Label>\r\n            <Input type=\"password\" onChangeText={(text) => setPassword(text)} />\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormControl.Label>Confirm Password</FormControl.Label>\r\n            <Input type=\"password\" onChangeText={(text) => setConfirmationPassword(text)} />\r\n          </FormControl>\r\n          <Button mt=\"2\" colorScheme=\"indigo\" onPress={() => onHandleRegister()}>\r\n            Sign up\r\n          </Button>\r\n        </VStack>\r\n      </Box> */}\r\n    </Center>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen"]},"metadata":{},"sourceType":"module"}