{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Center, Square, SceneMap, Dimensions, Circle, Text, Image } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AppTabView() {\n  var FirstRoute = function FirstRoute() {\n    return _jsx(Center, {\n      flex: 1,\n      my: \"4\",\n      children: \"This is Tab 1\"\n    });\n  };\n\n  var SecondRoute = function SecondRoute() {\n    return _jsx(Center, {\n      flex: 1,\n      my: \"4\",\n      children: \"This is Tab 2\"\n    });\n  };\n\n  var ThirdRoute = function ThirdRoute() {\n    return _jsx(Center, {\n      flex: 1,\n      my: \"4\",\n      children: \"This is Tab 3\"\n    });\n  };\n\n  var FourthRoute = function FourthRoute() {\n    return _jsxs(Center, {\n      flex: 1,\n      my: \"4\",\n      children: [\"This is Tab 4\", \" \"]\n    });\n  };\n\n  var initialLayout = {\n    width: 1920\n  };\n  var renderScene = SceneMap({\n    first: FirstRoute,\n    second: SecondRoute,\n    third: ThirdRoute,\n    fourth: FourthRoute\n  });\n\n  function Example() {\n    var _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        index = _React$useState2[0],\n        setIndex = _React$useState2[1];\n\n    var _React$useState3 = React.useState([{\n      key: \"first\",\n      title: \"Tab 1\"\n    }, {\n      key: \"second\",\n      title: \"Tab 2\"\n    }, {\n      key: \"third\",\n      title: \"Tab 3\"\n    }, {\n      key: \"fourth\",\n      title: \"Tab 4\"\n    }]),\n        _React$useState4 = _slicedToArray(_React$useState3, 1),\n        routes = _React$useState4[0];\n\n    var renderTabBar = function renderTabBar(props) {\n      var inputRange = props.navigationState.routes.map(function (x, i) {\n        return i;\n      });\n      return _jsx(Box, {\n        flexDirection: \"row\",\n        children: props.navigationState.routes.map(function (route, i) {\n          var opacity = props.position.interpolate({\n            inputRange: inputRange,\n            outputRange: inputRange.map(function (inputIndex) {\n              return inputIndex === i ? 1 : 0.5;\n            })\n          });\n          var color = index === i ? useColorModeValue(\"#000\", \"#e5e5e5\") : useColorModeValue(\"#1f2937\", \"#a1a1aa\");\n          var borderColor = index === i ? \"cyan.500\" : useColorModeValue(\"coolGray.200\", \"gray.400\");\n          return _jsx(Box, {\n            borderBottomWidth: \"3\",\n            borderColor: borderColor,\n            flex: 1,\n            alignItems: \"center\",\n            p: \"3\",\n            cursor: \"pointer\",\n            children: _jsx(Pressable, {\n              onPress: function onPress() {\n                console.log(i);\n                setIndex(i);\n              },\n              children: _jsx(Animated.Text, {\n                style: {\n                  color: color\n                },\n                children: route.title\n              })\n            })\n          });\n        })\n      });\n    };\n\n    return _jsx(TabView, {\n      navigationState: {\n        index: index,\n        routes: routes\n      },\n      renderScene: renderScene,\n      renderTabBar: renderTabBar,\n      onIndexChange: setIndex,\n      initialLayout: initialLayout,\n      style: {\n        marginTop: StatusBar.currentHeight\n      }\n    });\n  }\n}\n\nexport default AppTabView;","map":{"version":3,"sources":["C:/laragon/www/mining/src/Components/AppTabView.js"],"names":["React","useState","Center","Square","SceneMap","Dimensions","Circle","Text","Image","AppTabView","FirstRoute","SecondRoute","ThirdRoute","FourthRoute","initialLayout","width","renderScene","first","second","third","fourth","Example","index","setIndex","key","title","routes","renderTabBar","props","inputRange","navigationState","map","x","i","route","opacity","position","interpolate","outputRange","inputIndex","color","useColorModeValue","borderColor","console","log","marginTop","StatusBar","currentHeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Center, Square, SceneMap, Dimensions, Circle , Text, Image} from \"native-base\";\r\n\r\n\r\n\r\nfunction AppTabView() {\r\n    const FirstRoute = () => <Center flex={1} my=\"4\">\r\n        This is Tab 1\r\n    </Center>;\r\n\r\n    const SecondRoute = () => <Center flex={1} my=\"4\">\r\n        This is Tab 2\r\n    </Center>;\r\n\r\n    const ThirdRoute = () => <Center flex={1} my=\"4\">\r\n        This is Tab 3\r\n    </Center>;\r\n\r\n    const FourthRoute = () => <Center flex={1} my=\"4\">\r\n        This is Tab 4{\" \"}\r\n    </Center>;\r\n\r\n    const initialLayout = {\r\n        width: 1920\r\n    };\r\n    const renderScene = SceneMap({\r\n        first: FirstRoute,\r\n        second: SecondRoute,\r\n        third: ThirdRoute,\r\n        fourth: FourthRoute\r\n    });\r\n\r\n    function Example() {\r\n    const [index, setIndex] = React.useState(0);\r\n    const [routes] = React.useState([{\r\n        key: \"first\",\r\n        title: \"Tab 1\"\r\n    }, {\r\n        key: \"second\",\r\n        title: \"Tab 2\"\r\n    }, {\r\n        key: \"third\",\r\n        title: \"Tab 3\"\r\n    }, {\r\n        key: \"fourth\",\r\n        title: \"Tab 4\"\r\n    }]);\r\n\r\n    const renderTabBar = props => {\r\n        const inputRange = props.navigationState.routes.map((x, i) => i);\r\n        return <Box flexDirection=\"row\">\r\n            {props.navigationState.routes.map((route, i) => {\r\n            const opacity = props.position.interpolate({\r\n            inputRange,\r\n            outputRange: inputRange.map(inputIndex => inputIndex === i ? 1 : 0.5)\r\n            });\r\n            const color = index === i ? useColorModeValue(\"#000\", \"#e5e5e5\") : useColorModeValue(\"#1f2937\", \"#a1a1aa\");\r\n            const borderColor = index === i ? \"cyan.500\" : useColorModeValue(\"coolGray.200\", \"gray.400\");\r\n            return <Box borderBottomWidth=\"3\" borderColor={borderColor} flex={1} alignItems=\"center\" p=\"3\" cursor=\"pointer\">\r\n                <Pressable onPress={() => {\r\n                console.log(i);\r\n                setIndex(i);\r\n            }}>\r\n                    <Animated.Text style={{\r\n                color\r\n                }}>{route.title}</Animated.Text>\r\n                </Pressable>\r\n                </Box>;\r\n        })}\r\n        </Box>;\r\n    };\r\n\r\n    return <TabView navigationState={{\r\n        index,\r\n        routes\r\n    }} renderScene={renderScene} renderTabBar={renderTabBar} onIndexChange={setIndex} initialLayout={initialLayout} style={{\r\n        marginTop: StatusBar.currentHeight\r\n    }} />;\r\n    }\r\n}\r\n\r\nexport default AppTabView"]},"metadata":{},"sourceType":"module"}